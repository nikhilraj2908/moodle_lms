

{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_academi/frontpage

    Academi frontpage template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page
    * bodyattributes - attributes for the body tag as a string of html attributes
    * sidepreblocks - HTML for the blocks
    * hasblocks - true if there are blocks on this page
    * courseindexopen - true if the nav drawer should be open on page load
    * regionmainsettingsmenu - HTML for the region main settings menu
    * hasregionmainsettingsmenu - There is a region main settings menu on this page.

    Example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
        },
        "bodyattributes":"",
        "sidepreblocks": "<h2>Blocks html goes here</h2>",
        "hasblocks":true,
        "courseindexopen": true,
        "navdraweropen": false,
        "blockdraweropen": true,
        "regionmainsettingsmenu": "",
        "hasregionmainsettingsmenu": false,
        "addblockbutton": ""
    }
}}

{{> theme_boost/head }}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<body {{{ bodyattributes }}}>
    {{> core/local/toast/wrapper}}
    <div id="page-wrapper" class="d-print-block">
        {{{ output.standard_top_of_body_html }}}
        {{> theme_academi/header }}
        {{> theme_academi/slideshow }}

        {{#courseindex}}
            {{< theme_boost/drawer }}
                {{$id}}theme_boost-drawers-courseindex{{/id}}
                {{$drawerclasses}}drawer drawer-left {{#courseindexopen}}show{{/courseindexopen}}{{/drawerclasses}}
                {{$drawercontent}}
                    {{{courseindex}}}
                {{/drawercontent}}
                {{$drawerpreferencename}}drawer-open-index{{/drawerpreferencename}}
                {{$drawerstate}}show-drawer-left{{/drawerstate}}
                {{$tooltipplacement}}right{{/tooltipplacement}}
                {{$closebuttontext}}{{#str}}closecourseindex, core{{/str}}{{/closebuttontext}}
            {{/ theme_boost/drawer}}
        {{/courseindex}}
        {{#hasblocks}}
            {{< theme_boost/drawer }}
                {{$id}}theme_boost-drawers-blocks{{/id}}
                {{$drawerclasses}}drawer drawer-right{{#blockdraweropen}} show{{/blockdraweropen}}{{/drawerclasses}}
                {{$drawercontent}}
                    <section class="d-print-none" aria-label="{{#str}}blocks{{/str}}">
                        {{{ addblockbutton }}}
                        {{{ sidepreblocks }}}
                    </section>
                {{/drawercontent}}
                {{$drawerpreferencename}}drawer-open-block{{/drawerpreferencename}}
                {{$forceopen}}{{#forceblockdraweropen}}1{{/forceblockdraweropen}}{{/forceopen}}
                {{$drawerstate}}show-drawer-right{{/drawerstate}}
                {{$tooltipplacement}}left{{/tooltipplacement}}
                {{$drawercloseonresize}}1{{/drawercloseonresize}}
                {{$closebuttontext}}{{#str}}closeblockdrawer, core{{/str}}{{/closebuttontext}}
            {{/ theme_boost/drawer}}
        {{/hasblocks}}
        <div id="page" data-region="mainpage" data-usertour="scroller" class="drawers {{#courseindexopen}}show-drawer-left{{/courseindexopen}} {{#blockdraweropen}}show-drawer-right{{/blockdraweropen}} drag-container {{jumbotronclass}}">
            <div id="topofscroll" class="main-inner">
                <div class="drawer-toggles d-flex">
                    {{#courseindex}}
                        <div class="drawer-toggler drawer-left-toggle open-nav d-print-none">
                            <button
                                class="btn icon-no-margin"
                                data-toggler="drawers"
                                data-action="toggle"
                                data-target="theme_boost-drawers-courseindex"
                                data-toggle="tooltip"
                                data-placement="right"
                                title="{{#str}}opendrawerindex, core{{/str}}"
                            >
                                <span class="sr-only">{{#str}}opendrawerindex, core{{/str}}</span>
                                {{#pix}} t/index_drawer, moodle {{/pix}}
                            </button>
                        </div>
                    {{/courseindex}}
                    {{#hasblocks}}
                        <div class="drawer-toggler drawer-right-toggle ml-auto d-print-none">
                            <button
                                class="btn icon-no-margin"
                                data-toggler="drawers"
                                data-action="toggle"
                                data-target="theme_boost-drawers-blocks"
                                data-toggle="tooltip"
                                data-placement="right"
                                title="{{#str}}opendrawerblocks, core{{/str}}"
                            >
                                <span class="sr-only">{{#str}}opendrawerblocks, core{{/str}}</span>
                                <span class="dir-rtl-hide">{{#pix}}t/blocks_drawer, core{{/pix}}</span>
                                <span class="dir-ltr-hide">{{#pix}}t/blocks_drawer_rtl, core{{/pix}}</span>
                            </button>
                        </div>
                    {{/hasblocks}}
                </div>
                {{{ output.full_header }}}
                {{#secondarymoremenu}}
                    <div class="secondary-navigation d-print-none">
                        {{> core/moremenu}}
                    </div>
                {{/secondarymoremenu}}



         {{#isloggedin}}
         <div class="progress-dashboard-container">
         <div class="user-info">
    {{{userpicture}}}
    <div class="user-name">
        <h2 class="welcome-text">Welcome {{username}}</h2>
        <p >A learning curve is essential to growth!</p>
    </div>
</div>

<div class="dashboard-container">
    <!-- Learning Path -->
    <div class="card-progress">
        <h3>Learning Path</h3>
        <p><b>{{completedCourses}}</b> Completed / <b>{{totalCourses}}</b> Assigned</p>
        <div class="progress-container">
            <canvas id="learningPathChart" data-progress="{{learningPathPercentage}}"></canvas>
            <div class="progress-text-new" id="learningPathText">{{learningPathPercentage}}%</div>
        </div>
    </div>

    <!-- Curriculum -->
    <div class="card-progress">
        <h3>Curriculum</h3>
        <p><b>0</b> Overdue / <b>{{completedCourses}}</b> Completed / <b>{{totalCourses}}</b> Assigned</p>
        <div class="progress-container">
            <canvas id="curriculumChart" data-progress="{{curriculumPercentage}}"></canvas>
            <div class="progress-text-new" id="curriculumText">{{curriculumPercentage}}%</div>
        </div>
    </div>

    <!-- Points Earned (Replaced Progress Circle with Animation) -->
    <div class="card-progress">
        <h3>Total Points Earned</h3>
        <div class="points-display text-danger"><i class=" fas fa-star"></i> <b class="text-danger">{{totalPoints}}</b> Points</div>

        <div class="container-svg">
            <svg class="svg-icon" height="100" viewBox="0 0 100 100" width="100" xmlns="http://www.w3.org/2000/svg">
                <path d="M62.11,53.93c22.582-3.125,22.304-23.471,18.152-29.929-4.166-6.444-10.36-2.153-10.36-2.153v-4.166H30.099v4.166s-6.194-4.291-10.36,2.153c-4.152,6.458-4.43,26.804,18.152,29.929l5.236,7.777v8.249s-.944,4.597-4.833,4.986c-3.903,.389-7.791,4.028-7.791,7.374h38.997c0-3.347-3.889-6.986-7.791-7.374-3.889-.389-4.833-4.986-4.833-4.986v-8.249l5.236-7.777Zm7.388-24.818s2.833-3.097,5.111-1.347c2.292,1.75,2.292,15.86-8.999,18.138l3.889-16.791Zm-44.108-1.347c2.278-1.75,5.111,1.347,5.111,1.347l3.889,16.791c-11.291-2.278-11.291-16.388-8.999-18.138Z">
                </path>
            </svg>  
            <div class="container__star">
                <div class="star-eight"></div>
            </div>
        </div>
    </div>
</div>
         
         </div>
<div class="custom-courses-container">
    <h2 class="custom-section-title">ðŸ“š <span>My</span> Courses</h2>

    <div class="custom-course-grid" id="courseGrid">
        {{#courses}}
            <div class="custom-course-card">
                <div class="custom-course-card-image">
                    <img src="{{course_image_url}}" alt="{{course_name}}" 
                         onerror="this.src='/theme/academi/pix/defaultcourse.jpg';">
                    <a href="{{course_url}}" class="custom-view-more">View Course</a>
                </div>
                <div class="custom-course-card-info">
                    <h3 class="custom-course-title">{{course_name}}</h3>
                    <p class="custom-course-category"><i class="fas fa-tag"></i> {{category_name}}</p>
                    <p class="custom-course-dates">
                        <i class="far fa-calendar-alt"></i> <strong>Start:</strong> {{course_startdate}} &nbsp; | &nbsp;
                        <strong>End:</strong> {{course_enddate}}
                    </p>
                    <p class="custom-course-description">
                        <strong>Description:</strong> {{course_summary}}
                    </p>
                </div>
            </div>
        {{/courses}}
    </div>

    <button id="loadMoreBtn" class="custom-load-more">Load More</button>
</div>


{{/isloggedin}}

                <div id="page-content" class="pb-3 d-print-block">
                    <div id="region-main-box">
                        {{#hasregionmainsettingsmenu}}
                        <div id="region-main-settings-menu" class="d-print-none">
                            <div> {{{ regionmainsettingsmenu }}} </div>
                        </div>
                        {{/hasregionmainsettingsmenu}}
                        <section id="region-main" aria-label="{{#str}}content{{/str}}">
                            {{#hasregionmainsettingsmenu}}
                                <div class="region_main_settings_menu_proxy"></div>
                            {{/hasregionmainsettingsmenu}}
                            {{{ output.course_content_header }}}
                            {{#headercontent}}
                                {{> core/activity_header }}
                            {{/headercontent}}
                            {{#overflow}}
                                <div class="container tertiary-navigation">
                                    <div class="navitem">
                                        {{> core/url_select}}
                                    </div>
                                </div>
                            {{/overflow}}
                            {{{ output.main_content }}}
                            {{{ output.activity_navigation }}}
                            {{{ output.course_content_footer }}}
                        </section>
                    </div>
                </div>
            </div>
            {{> theme_academi/footer }}
        </div>
        {{{ output.standard_after_main_region_html }}}
    </div>
    
</body>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        function createGaugeChart(canvasId, textId, value) {
            let canvas = document.getElementById(canvasId);
            if (!canvas) return; // Prevent errors if element doesn't exist
            
            let progressValue = parseFloat(canvas.getAttribute('data-progress')) || 0; // Read value from data-progress
            
            let ctx = canvas.getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Completed', 'Remaining'],
                    datasets: [{
                        data: [progressValue, 100 - progressValue],
                        backgroundColor: ['green', 'lightgray']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    cutout: '70%',
                    plugins: {
                        legend: { display: false }
                    }
                }
            });

            document.getElementById(textId).innerText = progressValue.toFixed(2) + "%";
        }

        // Call function for Learning Path & Curriculum only (not for Points)
        createGaugeChart('learningPathChart', 'learningPathText');
        createGaugeChart('curriculumChart', 'curriculumText');
    });

  {{!   ////////////////////////////////////////////////////////////// }}

    document.addEventListener("DOMContentLoaded", function () {
    const courses = document.querySelectorAll(".custom-course-card");
    const loadMoreBtn = document.getElementById("loadMoreBtn");

    let visibleCourses = 4; // Initially show only 4 courses

    // Hide all courses except the first 4
    courses.forEach((course, index) => {
        if (index >= visibleCourses) {
            course.style.display = "none";
        }
    });

    // Load More Button Click Event
    loadMoreBtn.addEventListener("click", function () {
        if (loadMoreBtn.innerText === "Load More") {
            let nextCourses = visibleCourses + 4;

            courses.forEach((course, index) => {
                if (index < nextCourses) {
                    course.style.display = "flex";
                }
            });

            visibleCourses = nextCourses;

            // If all courses are visible, change button text to "See Less"
            if (visibleCourses >= courses.length) {
                loadMoreBtn.innerText = "See Less";
            }
        } else {
            // Reset to show only the first 4 courses
            visibleCourses = 4;

            courses.forEach((course, index) => {
                if (index >= visibleCourses) {
                    course.style.display = "none";
                }
            });

            loadMoreBtn.innerText = "Load More";
        }
    });
});

</script>




</html>
